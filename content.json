{"meta":{"title":"文以致远","subtitle":"愿多年之后少年归来，仍是赤子丹心。","description":null,"author":"Yaning.Dou","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"“说出来你可能不信（2），bootstrap贼好用（1）？”","slug":"“说出来你可能不信（2），bootstrap贼好用？”","date":"2017-03-13T12:58:37.000Z","updated":"2017-03-13T13:21:46.214Z","comments":true,"path":"2017/03/13/“说出来你可能不信（2），bootstrap贼好用？”/","link":"","permalink":"http://yoursite.com/2017/03/13/“说出来你可能不信（2），bootstrap贼好用？”/","excerpt":"","text":"说出来你可能不信，对于我这种立志走数据向的前端来讲，最近自己在重构自己很久很久以前写的捞比网页的时候，我发现自己设计网页是极其不靠谱的。画了两晚上，就搞出个结构图，然后试了试，写了一点，自己都觉得自己什么鬼……。我能怎么办，不过后来我google出来一个东西叫bootstrap的东西，按照自己的结构图写了一点，觉得还不错哎。大概就是这个样子吧，可能大部分人觉得还是很丑，不过对比一下大概感觉就会觉得第一个神TM的漂亮。所以bootstrap对于一个没有设计师的团队来讲其实是很有用的。说到bootstrap，那么核心的思想，个人感觉就是css进行了封装，然后给一个接口给你用，而且还提供自己改版的机会（如果你懂less或者sass的话），简直不要太赞了。那么详细来说一下bootstrap吧，bootstrap个人感觉形式和JQuery是很像的，都是通过一些选择器来操作的。bootstrap最赞的感觉还是3.0，完全重构之后对响应式的完全支持，这对于一个入门之后迷茫的前端开发者来讲的确是快速的开发一个pc+移动端都适配的网页的不二选择。所以，现在个人也在磨这个东西。接下来也会不定期的分享自己的踩坑历程。注：本人也是刚刚入门的小前端，如果哪里不对，欢迎各位大大指正。啊嘞，我还是滚去改我的网页吧，乐观的话，月底应该网站的前端加后台就可以做的差不多了，到时候我会上线一下自己写的网页试试，虽然很简单，但是毕竟是自己的亲儿子。","categories":[],"tags":[]},{"title":"ajax怎么用？","slug":"ajax怎么用？","date":"2017-03-10T13:10:39.000Z","updated":"2017-03-10T13:45:12.566Z","comments":true,"path":"2017/03/10/ajax怎么用？/","link":"","permalink":"http://yoursite.com/2017/03/10/ajax怎么用？/","excerpt":"","text":"AJAX是什么？全称：Asynchronous Javascript and XML(异步的加载js和XML技术)。为什么要用AJAX?使用ajax之后，当向服务器发送请求的时候不必发生等待结果，而是可以做其他的事情，等到有了结果他会自己根据设定进行后续的操作，与此同时页面不会发生整个页面刷新的也就是进一步提高了用户的体验。AJAX怎么实现异步加载的？（1）创建XMLHttpRequest对象，即创建一个异步调用的对象，而这个对象也是下面所有操作的基础。（2）创建一个新的http请求，并且指定该http请求的方法,url以及验证信息。（3）设置相应http请求变化的函数。（4）发送http请求（5）获取异步调用数据（6）使用js和Dom进行局部的刷新。 show the codefunction createXHR(){ if(typeofXMLHttpRequest!=”undefined”){ return new XMLHttpRequest();}else if(typeof ActiveObject!=’undefined’){ if(typeof arguments.callee.activeXString!=”string”){ var version=[“MSXML2.XMLHttp.6.0”,”MSXML2.XMLHttp.3.0”,”MSXML2.XMLHttp”],i,len; for(i=0,len=versions.length ;i&lt;length;i++){ try{new ActiveXobject(versons[i]); arguments.callee.activeXString=version[i]; break;}catch(ex){ //这里拿来写异常抛出吧 } }}}else { throw new Error(“No XHR object available.”);} }上面的是函数检测，没办法，我能怎么办，我也很绝望，这个东西不检测就可能没办法去适应ie7,兼容性检测，虽然很让人蛋疼，但是还是得做。先写到这吧，下面还有很多，慢慢的写。","categories":[],"tags":[]},{"title":"说出来你可能不信系列（1）原型链到底什么鬼？","slug":"说出来你可能不信系列（1）原型链到底什么鬼？","date":"2017-03-02T12:58:39.000Z","updated":"2017-03-04T10:35:59.120Z","comments":true,"path":"2017/03/02/说出来你可能不信系列（1）原型链到底什么鬼？/","link":"","permalink":"http://yoursite.com/2017/03/02/说出来你可能不信系列（1）原型链到底什么鬼？/","excerpt":"","text":"说出来你可能不信，虽然撸过一遍js高程设计，但是很多的地方还是不懂，比如原型链，也即是js继承的实现方式。JavaScript 对象是动态的属性“包”（指其自己的属性）。JavaScript 对象有一个指向一个原型对象的链。当试图访问一个对象的属性时，它不仅仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象的原型的原型，依此层层向上搜索，直到找到一个名字匹配的属性或到达原型链的末尾。原型链的结尾成为null，而null被规定是没有prototype属性的，所以当你搜索到null的时候你的原型链也就到头了。一个简单的例子var z={ a:5, m:function add(){ return this.a+1;}}console.log(z.m());//6z–&gt;Object.prototype—&gt;null;var f=Object.create(z);f.a=10;console.log(z.m());//11f–&gt;z找到了就返回相应的函数，找不到就继续找。这个就是最简单地原型链了。1 #使用普通的方法的创建对象function zz(){ return 2;}zz–&gt;function.prototype—&gt;Object.prototype–&gt;null; #使用构造器构造函数(我现在还很晕，就先不写了)； #使用Object create创建对象var a{ a:”wo qis shi hen shuai”}var b=Object.create(a);b-&gt;a-&gt;object.prototype-&gt;null;2在原型链上查找属性比较耗时，对性能有副作用，这在性能要求苛刻的情况下很重要。另外，试图访问不存在的属性时会遍历整个原型链。,所以尽量先用hasOwnProperty来检验一下。","categories":[],"tags":[]},{"title":"js的变量的作用域","slug":"js的变量的作用域","date":"2017-03-01T03:34:46.000Z","updated":"2017-03-01T04:29:04.931Z","comments":true,"path":"2017/03/01/js的变量的作用域/","link":"","permalink":"http://yoursite.com/2017/03/01/js的变量的作用域/","excerpt":"","text":"1 js 当中存在着作用域链 （1) 当函数受到调用需要进行变量的调用的时候，会先到最内层的函数去找。 如果找到了就直接输出，最内层的函数。 如果没有找到，那么去外层函数找，找到了，输出外层函数定义的变量。 如果还是没有找到，那么就去找整个函数外层的变量，如果还没找到，就会报错var ss=1;function ts(){ var ss=3; function inner(){ var ss=2; console.log(“输出你需要的值”+ss); } inner();}ts();输出你需要的值2这就是正确的输出，如果你存在什么疑问的话，可以尝试注释掉不同的文件，来检验到底对不对。2 js当中没有块级作用域学过一点java的人应该都知道块级作用域是什么意思，如果你没学过，那也没关系。你可以简单的认为，两个花括号之间就是一个块级作用域。function test() { for (var i=0;i&lt;2;i++){ } console.log(i);}test();如果你学过java一定知道，这个肯定会报错。但是在js里面却没有，而且输出了结果2.js不支持块级作用域，只支持函数作用域，而且很神奇的事情是你可以在一个函数内部的任何地方定义一个变量，而在这个函数的内部都可以访问到（如果不考虑嵌套函数的话） 嵌套函数会在闭包中仔细谈，现在可以忽略一下。3 如何创建块级作用域说出来你可能不信，很多情况下，我们的的确确是需要块级作用域的，但是这时候该怎么办？unction test(){ (function (){ for(var i=0;i&lt;2;i++){ } // console.log(i); })(); console.log(); }test();来来走两步，没事儿你再来走两步。运行之后，会报错，但是把第二个console注释，然后取消第一个的注释，结果就会出来了。这里就应用了闭包的概念，所以单独的拿出来谈闭包是没有什么意义的。","categories":[],"tags":[]},{"title":"在使用git过程中出现的问题","slug":"在使用git过程中出现的问题","date":"2017-02-27T13:46:48.000Z","updated":"2017-03-01T04:30:28.744Z","comments":true,"path":"2017/02/27/在使用git过程中出现的问题/","link":"","permalink":"http://yoursite.com/2017/02/27/在使用git过程中出现的问题/","excerpt":"","text":"在使用git推到github上面就出现了问题比如Reinitialized existing Git repository in c:/xampp/htdocs/website/.git/ 这样的问题我个人写的时候也出现了，主要是写了两次git init当然也有可能是其他的问题，暂时还没遇到，遇到了之后我会在持续的更新这个帖子的","categories":[],"tags":[]},{"title":"怎么推自己的项目到github","slug":"怎么推自己的项目到github","date":"2017-02-27T13:00:24.000Z","updated":"2017-02-27T13:44:29.267Z","comments":true,"path":"2017/02/27/怎么推自己的项目到github/","link":"","permalink":"http://yoursite.com/2017/02/27/怎么推自己的项目到github/","excerpt":"","text":"说来也简单，但是对于刚刚入门的萌新来讲，其实还是有点难度的。1如果你是第一次使用的话，那么强烈建议你去http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000个人诚心推荐，如果有能力的话，去阅读以下官方的文档也是很不错的。 （1）如果你已经10天前推过一次自己的项目，10天后建立了一个新的项目又来推，你发现你自己忘了怎么推了。 即刚刚在自己的github上建立的项目还开始没把本地上的项目开始推 （1）git init 在某一个目录下你就可以初始化空的git仓库完毕了（.git文件不用工具的话是看不见的） （2）git add READEME.md(如果你没有在github初始化时添加) 如果添加了的话可以跳过这一步直接到（3） （3） git add . 这个就是添加你所在文件中的所有的东西不论格式怎么样 当然也可以添加其他的格式 如 git add a.txt这个就是说添加一个名字叫a.txt的文件 （4）git commit -m “你所做的修改” 双引号里面的就是你对文件所做的修改 （5）git remote add origin git@github.com:blackcloud2333/ex.git 添加一个叫origin的远程仓库 （6）git push -u origin master 将本地的更改推送到远程的分支。 （7）然后就可以去自己的github上看到实际的效果了","categories":[],"tags":[]},{"title":"hexo搭建过程中出现的问题","slug":"hexo搭建过程中出现的问题","date":"2017-02-26T10:42:19.000Z","updated":"2017-02-26T12:06:11.413Z","comments":true,"path":"2017/02/26/hexo搭建过程中出现的问题/","link":"","permalink":"http://yoursite.com/2017/02/26/hexo搭建过程中出现的问题/","excerpt":"","text":"1 在改变_config_yml的时候，要注意，字和前面的目录之间不能有空格否则就会出现下面的这种情况 出现这种情况之后，请到相应的位置，并做修改，如果不行可以考虑注释掉出问题的那一行，然后在$ hexo s 试一下。 2TypeError: The header content contains invalid characters 在安装的过程当中还出现了这个问题 解决的方法如下：https://github.com/hexojs/hexo/issues/1746当你 在 _config_yml（首页的而不是themes当中的）进行了设置时候，尤其是改变 副标题（subtitle)之后就可能会出现这个问题具体的原理其实我现在也还没弄清楚，但是感觉是hexo sever 有点问题。经过安装HTTP-sever之后没问题了3 还有就是下面的这种问题 这种问题一般来说是没有按规则先进行 hexo new “文章标题” 而你自己写了markdown，没有引入文章的头部 &lt;!–title: hexo搭建过程中出现的问题date: 2017-02-26 18:42:19tags:—-&gt; 所以会引起相关的问题","categories":[],"tags":[]}]}